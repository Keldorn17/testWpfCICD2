name: "Deploy Todo App"

on:
    push:
      branches:
          - main
    pull_request:
        branches:
            - main

env:
    PROJECT_PATH: TODO.csproj

jobs:
    deploy:
        runs-on: windows-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
  
            - name: Setup .NET 8
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: 8.0.x

            - name: Restore dependencies
              run: dotnet restore ${{ env.PROJECT_PATH }} -r win-x64
  
            - name: Build the application
              run: dotnet build ${{ env.PROJECT_PATH }} -c Release --no-restore
  
            - name: Publish the executable
              run: dotnet publish ${{ env.PROJECT_PATH }} -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true --no-build -o publish_output

            - name: Upload artifact (Executable)
              uses: actions/upload-artifact@v4
              with:
                name: todo-app-executable
                path: publish_output/*.exe

    tag-and-release:
      needs: deploy
      if: github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
          with:
            fetch-depth: 0

        - name: Get version from project file
          id: get_version
          run: |
            VERSION=$(grep '<Version>' ${{ env.PROJECT_PATH }} | sed -E 's/.*<Version>(.*)<\/Version>.*/\1/')
            echo "Current version: $VERSION"
            echo "VERSION=$VERSION" >> $GITHUB_ENV

        - name: Generate tag
          id: tag
          run: |
            echo "New tag: todo/v$VERSION"
            echo "TAG_NAME=todo/v$VERSION" >> $GITHUB_ENV

        - name: Push the new tag
          run: |
            git config --global user.email "actions@github.com"
            git config --global user.name "GitHub Actions"
            git tag $TAG_NAME
            git push origin $TAG_NAME

        - name: Create GitHub Release
          uses: softprops/action-gh-release@v1
          with:
            tag_name: ${{ env.TAG_NAME }}
            name: ${{ env.TAG_NAME }}
            files: publish_output/*.exe
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}