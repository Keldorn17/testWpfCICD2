name: "Deploy Todo App"

on:
  push:
    branches:
      - main

env:
  PROJECT_PATH: TODO.csproj

jobs:
  deploy:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT_PATH }} -r win-x64
  
      - name: Build the application
        run: dotnet build ${{ env.PROJECT_PATH }} -c Release --no-restore
  
      - name: Publish application
        run: |
          dotnet publish ${{ env.PROJECT_PATH }} `
            -c Release `
            -r win-x64 `
            --self-contained true `
            -p:PublishSingleFile=false `
            -p:IncludeAllContentForSelfExtract=false `
            --no-build `
            -o publish_output

      - name: Create release ZIP
        run: |
          $compress = @{
            Path = "publish_output/*"
            DestinationPath = "TODO_Release.zip"
            CompressionLevel = "Optimal"
          }
          Compress-Archive @compress -Force

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-package
          path: TODO_Release.zip

  create-release:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: get_version
        run: |
          VERSION=$(grep '<Version>' ${{ env.PROJECT_PATH }} | sed -E 's/.*<Version>(.*)<\/Version>.*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "TAG_NAME=todo/v$VERSION" >> $GITHUB_ENV

      - name: Create tag
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: release-package
          path: release

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "Release ${{ env.TAG_NAME }}"
          files: |
            release/TODO_Release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}